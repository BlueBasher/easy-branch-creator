name: Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
        with:
          useConfigFile: true
          configFilePath: 'git-version.yml'

      - name: Npm install
        run: npm install

      - name: Tfx install
        run: npm install -g tfx-cli

      - name: Npm compile
        run: npm run compile

      - name: Tfx Package
        run: "tfx extension create --manifest-globs vss-extension.json --overrides-file configs/test.json --override '{\"version\": \"${{ steps.gitversion.outputs.semVer }}\"}' --output-path out"

      - name: Upload Tfx Package
        uses: actions/upload-artifact@v3.1.0
        with:
          name: tfxpackage
          path: ./out/

  deployment_test:
    needs: [build]
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Download Tfx Package
        uses: actions/download-artifact@v3.0.0
        with:
          name: tfxpackage

      - name: Tfx install
        run: npm install -g tfx-cli
      
      - name: Tfx Package
        env:
          AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
        run: |
          filename=$(ls *.vsix)
          "tfx extension publish --vsix $filename --auth-type pat --token $AZURE_DEVOPS_PAT"
